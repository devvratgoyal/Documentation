<project name="Sample usage of Salesforce Ant tasks" default="test" basedir="." xmlns:sf="antlib:com.salesforce">

    <property file="build.properties"/>
    <property environment="env"/>

    <target name="retrieveMYDEVELOPMENT">
		<sf:retrieve username="${myDevelopment.sf.username}" password="${myDevelopment.sf.password}" serverurl="${prod.sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="MYDEVELOPMENT" unpackaged="MyDevPackage.xml"/>
    </target>
	
	<target name="retrieveGOMCOM">
		<sf:retrieve username="${GOMCOM.sf.username}" password="${GOMCOM.sf.password}" serverurl="${prod.sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="GOMCOM" unpackaged="packageGOMCOM.xml"/>
    </target>
	
	<target name="retrieveGlobalRanger">
		<sf:retrieve username="${GlobalRanger.sf.username}" password="${GlobalRanger.sf.password}" serverurl="${prod.sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="GlobalRanger" unpackaged="package_GlobalRanger.xml"/>
    </target>
	
	<target name="retrieveGOMMaster">
		<sf:retrieve username="${GOMMaster.sf.username}" password="${GOMMaster.sf.password}" serverurl="${prod.sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="GOMMaster" unpackaged="package_GOMMaster.xml"/>
    </target>
	
	<target name="retrieveLEPSIDEV">
		<tstamp>
			<format property="TODAY_US" pattern="MMM-dd-yyyy 'at' hh mm a" locale="en,US"/>
		</tstamp>
		<mkdir dir="BAYERLepsidev/${TODAY_US}"/>
		<sf:retrieve username="${lepsidev.sf.username}" password="${lepsidev.sf.password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="BAYERLepsidev/${TODAY_US}" unpackaged="package_WheatBC.xml"/>
    </target>
	
	<target name="retrieveBAYERBCQA">
		<tstamp>
			<format property="TODAY_US" pattern="MMM-dd-yyyy 'at' hh mm a" locale="en,US"/>
		</tstamp>
		<mkdir dir="BAYERBCQA/${TODAY_US}"/>
		<sf:retrieve username="${MONQA.sf.username}" password="${MONQA.sf.password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="BAYERBCQA/${TODAY_US}" unpackaged="package_WheatBC.xml"/>
    </target>
	
	<target name="retrieveBAYERPreProd">
      <tstamp>
			<format property="TODAY_US" pattern="MMM-dd-yyyy 'at' hh mm a" locale="en,US"/>
		</tstamp>
		<mkdir dir="BAYERPreprod/${TODAY_US}"/>
      <sf:retrieve username="${preprod.sf.username}" password="${preprod.sf.password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="BAYERPreprod/${TODAY_US}" unpackaged="package_WheatBC.xml"/>
    </target>
		
	<target name="backUpCAEQA">
		<tstamp>
			<format property="TODAY_US" pattern="MMM-dd-yyyy 'at' hh mm a" locale="en,US"/>
		</tstamp>
		<mkdir dir="Scheduled Backup/CAEQA/${TODAY_US}"/>
		<sf:retrieve username="${caeqa.sf.username}" password="${caeqa.sf.password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="Scheduled Backup/CAEQA/${TODAY_US}" unpackaged="Scheduler/package.xml"/>
	</target>
	
	<!-- Shows removing code; only succeeds if done after deployCode -->
    <target name="undeployCode">
      <sf:deploy username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="removecodepkg"/>
    </target>
	
	<!-- Shows check only; never actually saves to the server-->
    
	<target name="deployCode_BAYERPreProd_TO_LEPSIDEV">
      <sf:deploy username="${lepsidev.sf.username}" password="${lepsidev.sf.password}"  serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="deployBAYERPreProd"/>
    </target>
	
	<target name="deployCode_BAYERPreProd_TO_LEPSIINT">
      <sf:deploy username="${lepsiInt.sf.username}" password="${lepsiInt.sf.password}"  serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="deployBAYERPreProd"/>
    </target>
	 
	<target name="deployCode_MIOQA_TO_Dev_CheckOnly">
      <sf:deploy username="${dev.sf.username}" password="${dev.sf.password}"  testLevel="RunSpecifiedTests" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="codepkgMIOQA" checkOnly="true">
		<runTest>MIO_USPA_CATK12ProdController_Test</runTest>
		<runTest>MIO_USPA_VolunteerGrpProdController_Test</runTest>
		<runTest>MIO_USPA_ChildCareProductController_Test</runTest>
		<runTest>MIO_USPA_BTAProdController_Test</runTest>
		<runTest>MIO_USPA_CaseInqBrReqController_Test</runTest>
		<runTest>MIO_USPA_CaseInqIntReqController_Test</runTest>
		<runTest>MIO_USPA_QuickQuoteController_Test</runTest>
		<runTest>MIO_USPA_CaseTriggerHandler_Test</runTest>
		<runTest>MIO_PI_CaseInquiryReqCon_Test</runTest>
		<runTest>MIO_USPA_SendPolLetterController_Test</runTest>
		<runTest>MIO_USPA_ConfirmLetterController_Test</runTest>
		<runTest>MIO_USPA_BrokerFormController_UI_Test</runTest>
		<runTest>MIO_USPA_PassAccController_Test</runTest>
		</sf:deploy>
    </target>
	
	<!-- Shows deploying code & running tests for code in directory -->
    <target name="deployCode">
      <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
      <sf:deploy username="${sf.username}" password="${sf.password}" runAllTests="true" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="codepkg">        
      </sf:deploy>
    </target>
	<target name="DeployCode_GlobalRanger">
      <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
      <sf:deploy username="${GlobalRanger.sf.username}" password="${GlobalRanger.sf.password}" serverurl="${prod.sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="codepkg">        
      </sf:deploy>
    </target>
	<target name="DeployCode_GOMMaster">
      <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
      <sf:deploy username="${GOMMaster.sf.username}" password="${GOMMaster.sf.password}" serverurl="${prod.sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="codepkg">        
      </sf:deploy>
    </target>
	
	<target name="deployProduction">
      <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
      <sf:deploy username="${prod1.sf.username}" password="${prod1.sf.password}"  serverurl="${prod.sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="codepkg">        
      </sf:deploy>
    </target>	
	
	<!-- Test out deploy and retrieve verbs for package 'mypkg' -->
    <target name="test">
      <!-- Upload the contents of the "mypkg" package -->
      <sf:deploy username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="mypkg"/>
      <mkdir dir="retrieveOutput"/>
      <!-- Retrieve the contents into another directory -->
      <sf:retrieve username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="retrieveOutput" packageNames="MyPkg"/>
    </target>

    <!-- Retrieve an unpackaged set of metadata from your org -->
    <!-- The file unpackaged/package.xml lists what is to be retrieved -->
    <target name="retrieveUnpackaged">
      <mkdir dir="retrieveUnpackaged"/>
      <!-- Retrieve the contents into another directory -->
      <sf:retrieve username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="retrieveUnpackaged" unpackaged="unpackaged/package.xml"/>
    </target>

    <!-- Retrieve all the items of a particular metadata type -->
    <target name="bulkRetrieve">
      <sf:bulkRetrieve username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" metadataType="${sf.metadataType}" retrieveTarget="retrieveUnpackaged"/>
    </target>

    <!-- Retrieve metadata for all the packages specified under packageNames -->
    <target name="retrievePkg">
      <sf:retrieve username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="retrieveOutput" packageNames="${sf.pkgName}"/>
    </target>

    <!-- Deploy the unpackaged set of metadata retrieved with retrieveUnpackaged -->
    <target name="deployUnpackaged">
      <sf:deploy username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="retrieveUnpackaged"/>
    </target>

    <!-- Deploy a zip of metadata files to the org -->
    <target name="deployZip">
      <sf:deploy username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" zipFile="${sf.zipFile}" pollWaitMillis="1000"/>
    </target>

    <!-- Shows deploying code, running all tests, and running tests (1 of which fails), and logging. -->
    <target name="deployCodeFailingTest">
      <!-- Upload the contents of the "codepkg" package, running all tests -->
      <sf:deploy username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="codepkg" runAllTests="true" logType="Debugonly"/>
    </target>

    <!-- Retrieve the information of all items of a particular metadata type -->
    <target name="listMetadata">
      <sf:listMetadata username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" metadataType="${sf.metadataType}"/>
    </target>

	<!-- Retrieve the information on all supported metadata type -->
    <target name="describeMetadata">
      <sf:describeMetadata username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}"/>
    </target>
	
</project>